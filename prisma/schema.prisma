// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id Int @id @default(autoincrement())
  email String @unique
  hashedPassword String
  firstName String ?
  lastName String ?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  carts Cart[]

  @@map("users")
}


model Product {
  id Int @id @default(autoincrement())
  title String
  description String ?
  url String
  price Int
  price_old Int ?
  tagNew String ?
  tagDiscount String ?
  category Int
  cartItems CartItem[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("products")
}
model Topping {
  id Int @id @default(autoincrement())
  title String
  price Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
 
  @@map("toppings")
}
model Cart {
  id Int @id @default(autoincrement())
  cartItems CartItem[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  userId Int
  user User @relation(fields: [userId], references: [id])

  @@map("carts")
}

model CartItem {
  id Int @id @default(autoincrement())
  productId Int
  quantity Int
  cartId Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  product Product @relation(fields: [productId], references: [id])
  cart Cart @relation(fields: [cartId], references: [id])

  @@map("cart_items")
}

